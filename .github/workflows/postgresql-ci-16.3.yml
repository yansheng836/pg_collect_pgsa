name: PostgreSQL Session Collector CI for 16.3

on: [push, pull_request]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PostgreSQL permissions
        run: |
          docker exec ${{ job.services.postgres.id }} psql -U test_user -d test_db -c \
            "CREATE USER pgsa_user WITH PASSWORD 'pgsa_pass'; \
             GRANT pg_read_all_stats TO pgsa_user;"

      - name: Test minute-level collection
        run: |
          chmod +x pg_collect_pgsa.sh
          export PG_HOST=localhost
          export PG_PORT=5432
          export PG_USER=pgsa_user
          export PG_PASSWORD=pgsa_pass
          export PG_DATABASE=test_db
          ./pg_collect_pgsa.sh
          #[ -f "pgsa-$(date +%Y%m%d)-$(date +%H).log" ] || exit 1
          [ -f "pgsa.log" ] || exit 1
          [ -f "debug.log" ] || exit 1

      - name: Test second-level collection
        run: |
          chmod +x pg_collect_pgsa_gap_second.sh
          export PG_HOST=localhost
          export PG_PORT=5432
          export PG_USER=pgsa_user
          export PG_PASSWORD=pgsa_pass
          export PG_DATABASE=test_db
          ./pg_collect_pgsa_gap_second.sh 30
          sleep 5  # Allow time for collection
          [ $(grep -c "Activity" pgsa.log) -ge 2 ] || exit 1

      - name: Verify log content
        run: |
          LOGFILE=$(ls pgsa.log | head -1)
          grep -q 'checkpointer' $LOGFILE
          grep -q 'background writer' $LOGFILE
          grep -q 'walwriter' $LOGFILE
          grep -q 'logical replication launcher' $LOGFILE
          grep -q 'autovacuum launcher' $LOGFILE
          
          LOGFILE2=$(ls debug.log | head -1)
          grep -q 'begin...' $LOGFILE2
          grep -q 'end!' $LOGFILE2